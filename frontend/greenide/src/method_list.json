{
    "kanzimethods" : [
        "kanzi.Global$1.compare()",
        "kanzi.Global.<clinit>()",
        "kanzi.Global.computeHistogramOrder0()",
        "kanzi.Global.computeHistogramOrder1()",
        "kanzi.Global.initSquash()",
        "kanzi.Global.initStretch()",
        "kanzi.Global.log2()",
        "kanzi.Global.log2_1024()",
        "kanzi.Global.positiveOrNull()",
        "kanzi.Global.sortFilesByPathAndSize()",
        "kanzi.Global.squash()",
        "kanzi.Memory$BigEndian.readLong64()",
        "kanzi.Memory$BigEndian.writeInt32()",
        "kanzi.Memory$BigEndian.writeLong64()",
        "kanzi.Memory$LittleEndian.readInt16()",
        "kanzi.Memory$LittleEndian.readInt32()",
        "kanzi.Memory$LittleEndian.readLong64()",
        "kanzi.Memory.<clinit>()",
        "kanzi.SliceByteArray.<init>()",
        "kanzi.SliceByteArray.<init>(byte[ ], int)()",
        "kanzi.SliceByteArray.<init>(byte[ ], int, int)()",
        "kanzi.app.BlockCompressor$FileCompressTask.call()",
        "kanzi.app.BlockCompressor$FileCompressTask.dispose()",
        "kanzi.app.BlockCompressor$FileCompressWorker.call()",
        "kanzi.app.BlockCompressor.<init>()",
        "kanzi.app.BlockCompressor.call()",
        "kanzi.app.BlockCompressor.printOut()",
        "kanzi.app.Kanzi.createFileList()",
        "kanzi.app.Kanzi.main()",
        "kanzi.app.Kanzi.printOut()",
        "kanzi.app.Kanzi.processCommandLine()",
        "kanzi.bitstream.DefaultOutputBitStream.<init>()",
        "kanzi.bitstream.DefaultOutputBitStream.close()",
        "kanzi.bitstream.DefaultOutputBitStream.flush()",
        "kanzi.bitstream.DefaultOutputBitStream.isClosed()",
        "kanzi.bitstream.DefaultOutputBitStream.pushCurrent()",
        "kanzi.bitstream.DefaultOutputBitStream.writeBit()",
        "kanzi.bitstream.DefaultOutputBitStream.writeBits(byte[ ], int, int)()",
        "kanzi.bitstream.DefaultOutputBitStream.writeBits(long, int)()",
        "kanzi.bitstream.DefaultOutputBitStream.written()",
        "kanzi.entropy.ANSRangeEncoder$Symbol.reset()",
        "kanzi.entropy.ANSRangeEncoder.<init>(kanzi.OutputBitStream, int)()",
        "kanzi.entropy.ANSRangeEncoder.<init>(kanzi.OutputBitStream, int, int, int)()",
        "kanzi.entropy.ANSRangeEncoder.dispose()",
        "kanzi.entropy.ANSRangeEncoder.encode()",
        "kanzi.entropy.ANSRangeEncoder.encodeChunk()",
        "kanzi.entropy.ANSRangeEncoder.encodeHeader()",
        "kanzi.entropy.ANSRangeEncoder.rebuildStatistics()",
        "kanzi.entropy.ANSRangeEncoder.updateFrequencies()",
        "kanzi.entropy.BinaryEntropyEncoder.<init>()",
        "kanzi.entropy.BinaryEntropyEncoder.dispose()",
        "kanzi.entropy.BinaryEntropyEncoder.encode()",
        "kanzi.entropy.BinaryEntropyEncoder.encodeBit()",
        "kanzi.entropy.BinaryEntropyEncoder.encodeByte()",
        "kanzi.entropy.BinaryEntropyEncoder.flush()",
        "kanzi.entropy.CMPredictor.<init>()",
        "kanzi.entropy.CMPredictor.get()",
        "kanzi.entropy.CMPredictor.update()",
        "kanzi.entropy.EntropyCodecFactory.getType()",
        "kanzi.entropy.EntropyCodecFactory.newEncoder()",
        "kanzi.entropy.EntropyUtils$FreqSortData.<init>()",
        "kanzi.entropy.EntropyUtils$FreqSortData.compareTo()",
        "kanzi.entropy.EntropyUtils$FreqSortData.compareTo(kanzi.entropy.EntropyUtils$FreqSortData)()",
        "kanzi.entropy.EntropyUtils.<init>()",
        "kanzi.entropy.EntropyUtils.computeFirstOrderEntropy1024()",
        "kanzi.entropy.EntropyUtils.encodeAlphabet()",
        "kanzi.entropy.EntropyUtils.normalizeFrequencies()",
        "kanzi.entropy.EntropyUtils.writeVarInt()",
        "kanzi.entropy.ExpGolombEncoder.<init>()",
        "kanzi.entropy.ExpGolombEncoder.encodeByte()",
        "kanzi.entropy.HuffmanCommon.generateCanonicalCodes()",
        "kanzi.entropy.HuffmanEncoder.<init>(kanzi.OutputBitStream)()",
        "kanzi.entropy.HuffmanEncoder.<init>(kanzi.OutputBitStream, int)()",
        "kanzi.entropy.HuffmanEncoder.computeCodeLengths()",
        "kanzi.entropy.HuffmanEncoder.computeInPlaceSizesPhase1()",
        "kanzi.entropy.HuffmanEncoder.computeInPlaceSizesPhase2()",
        "kanzi.entropy.HuffmanEncoder.dispose()",
        "kanzi.entropy.HuffmanEncoder.encode()",
        "kanzi.entropy.HuffmanEncoder.updateFrequencies()",
        "kanzi.entropy.LogisticAdaptiveProbMap.<init>()",
        "kanzi.entropy.LogisticAdaptiveProbMap.get()",
        "kanzi.entropy.NullEntropyEncoder.<init>()",
        "kanzi.entropy.NullEntropyEncoder.dispose()",
        "kanzi.entropy.NullEntropyEncoder.encode()",
        "kanzi.entropy.RangeEncoder.<init>(kanzi.OutputBitStream)()",
        "kanzi.entropy.RangeEncoder.<init>(kanzi.OutputBitStream, int, int)()",
        "kanzi.entropy.RangeEncoder.encode()",
        "kanzi.entropy.RangeEncoder.encodeByte()",
        "kanzi.entropy.RangeEncoder.encodeHeader()",
        "kanzi.entropy.RangeEncoder.rebuildStatistics()",
        "kanzi.entropy.RangeEncoder.updateFrequencies()",
        "kanzi.entropy.TPAQPredictor$Mixer.<init>()",
        "kanzi.entropy.TPAQPredictor$Mixer.get()",
        "kanzi.entropy.TPAQPredictor$Mixer.update()",
        "kanzi.entropy.TPAQPredictor.<init>()",
        "kanzi.entropy.TPAQPredictor.createContext()",
        "kanzi.entropy.TPAQPredictor.findMatch()",
        "kanzi.entropy.TPAQPredictor.get()",
        "kanzi.entropy.TPAQPredictor.getMatchContextPred()",
        "kanzi.entropy.TPAQPredictor.update()",
        "kanzi.function.BWTBlockCodec.<init>()",
        "kanzi.function.BWTBlockCodec.forward()",
        "kanzi.function.BWTBlockCodec.getMaxEncodedLength()",
        "kanzi.function.ByteFunctionFactory.getName()",
        "kanzi.function.ByteFunctionFactory.getType()",
        "kanzi.function.ByteFunctionFactory.getTypeToken()",
        "kanzi.function.ByteFunctionFactory.newFunction()",
        "kanzi.function.ByteFunctionFactory.newFunctionToken()",
        "kanzi.function.ByteTransformSequence.<init>()",
        "kanzi.function.ByteTransformSequence.forward()",
        "kanzi.function.ByteTransformSequence.getMaxEncodedLength()",
        "kanzi.function.ByteTransformSequence.getNbFunctions()",
        "kanzi.function.ByteTransformSequence.getSkipFlags()",
        "kanzi.function.LZCodec$LZPCodec.<init>()",
        "kanzi.function.LZCodec$LZPCodec.forward()",
        "kanzi.function.LZCodec$LZXCodec.<init>()",
        "kanzi.function.LZCodec$LZXCodec.arrayChunkCopy()",
        "kanzi.function.LZCodec$LZXCodec.emitLastLiterals()",
        "kanzi.function.LZCodec$LZXCodec.emitLength()",
        "kanzi.function.LZCodec$LZXCodec.emitLiterals()",
        "kanzi.function.LZCodec$LZXCodec.forward()",
        "kanzi.function.LZCodec$LZXCodec.getMaxEncodedLength()",
        "kanzi.function.LZCodec$LZXCodec.hash()",
        "kanzi.function.LZCodec.<init>()",
        "kanzi.function.LZCodec.differentInts()",
        "kanzi.function.LZCodec.forward()",
        "kanzi.function.LZCodec.getMaxEncodedLength()",
        "kanzi.function.NullFunction.<init>()",
        "kanzi.function.NullFunction.doCopy()",
        "kanzi.function.NullFunction.forward()",
        "kanzi.function.NullFunction.getMaxEncodedLength()",
        "kanzi.function.RLT.<init>()",
        "kanzi.function.RLT.emitRunLength()",
        "kanzi.function.RLT.forward()",
        "kanzi.function.RLT.getMaxEncodedLength()",
        "kanzi.function.ROLZCodec$ROLZCodec1.<init>()",
        "kanzi.function.ROLZCodec$ROLZCodec1.<init>(int)()",
        "kanzi.function.ROLZCodec$ROLZCodec1.emitTokens()",
        "kanzi.function.ROLZCodec$ROLZCodec1.findMatch()",
        "kanzi.function.ROLZCodec$ROLZCodec1.forward()",
        "kanzi.function.ROLZCodec$ROLZCodec1.getMaxEncodedLength()",
        "kanzi.function.ROLZCodec$ROLZCodec2.<init>()",
        "kanzi.function.ROLZCodec$ROLZCodec2.<init>(int)()",
        "kanzi.function.ROLZCodec$ROLZCodec2.findMatch()",
        "kanzi.function.ROLZCodec$ROLZCodec2.forward()",
        "kanzi.function.ROLZCodec$ROLZCodec2.getMaxEncodedLength()",
        "kanzi.function.ROLZCodec$ROLZEncoder.<init>()",
        "kanzi.function.ROLZCodec$ROLZEncoder.dispose()",
        "kanzi.function.ROLZCodec$ROLZEncoder.encodeBit()",
        "kanzi.function.ROLZCodec$ROLZEncoder.encodeBits()",
        "kanzi.function.ROLZCodec$ROLZEncoder.reset()",
        "kanzi.function.ROLZCodec$ROLZEncoder.setContext()",
        "kanzi.function.ROLZCodec$ROLZEncoder.setMode()",
        "kanzi.function.ROLZCodec.<init>()",
        "kanzi.function.ROLZCodec.forward()",
        "kanzi.function.ROLZCodec.getKey()",
        "kanzi.function.ROLZCodec.getMaxEncodedLength()",
        "kanzi.function.ROLZCodec.hash()",
        "kanzi.function.SRT.<init>()",
        "kanzi.function.SRT.encodeHeader()",
        "kanzi.function.SRT.forward()",
        "kanzi.function.SRT.getMaxEncodedLength()",
        "kanzi.function.SRT.preprocess()",
        "kanzi.function.TextCodec$DictEntry.<init>()",
        "kanzi.function.TextCodec$TextCodec1.<init>()",
        "kanzi.function.TextCodec$TextCodec1.emitSymbols()",
        "kanzi.function.TextCodec$TextCodec1.emitWordIndex()",
        "kanzi.function.TextCodec$TextCodec1.expandDictionary()",
        "kanzi.function.TextCodec$TextCodec1.forward()",
        "kanzi.function.TextCodec$TextCodec1.getMaxEncodedLength()",
        "kanzi.function.TextCodec$TextCodec1.reset()",
        "kanzi.function.TextCodec$TextCodec2.<init>()",
        "kanzi.function.TextCodec$TextCodec2.emitSymbols()",
        "kanzi.function.TextCodec$TextCodec2.emitWordIndex()",
        "kanzi.function.TextCodec$TextCodec2.expandDictionary()",
        "kanzi.function.TextCodec$TextCodec2.forward()",
        "kanzi.function.TextCodec$TextCodec2.getMaxEncodedLength()",
        "kanzi.function.TextCodec$TextCodec2.reset()",
        "kanzi.function.TextCodec.<init>()",
        "kanzi.function.TextCodec.computeStats()",
        "kanzi.function.TextCodec.createDictionary()",
        "kanzi.function.TextCodec.forward()",
        "kanzi.function.TextCodec.getMaxEncodedLength()",
        "kanzi.function.TextCodec.isDelimiter()",
        "kanzi.function.TextCodec.isLowerCase()",
        "kanzi.function.TextCodec.isText()",
        "kanzi.function.TextCodec.isUpperCase()",
        "kanzi.function.TextCodec.sameWords()",
        "kanzi.function.X86Codec.<init>()",
        "kanzi.function.X86Codec.forward()",
        "kanzi.function.X86Codec.getMaxEncodedLength()",
        "kanzi.function.ZRLT.<init>()",
        "kanzi.function.ZRLT.forward()",
        "kanzi.function.ZRLT.getMaxEncodedLength()",
        "kanzi.io.CompressedOutputStream$CustomByteArrayOutputStream.<init>()",
        "kanzi.io.CompressedOutputStream$EncodingTask.<init>()",
        "kanzi.io.CompressedOutputStream$EncodingTask.call()",
        "kanzi.io.CompressedOutputStream$EncodingTask.encodeBlock()",
        "kanzi.io.CompressedOutputStream$Status.<init>()",
        "kanzi.io.CompressedOutputStream.<init>()",
        "kanzi.io.CompressedOutputStream.close()",
        "kanzi.io.CompressedOutputStream.getWritten()",
        "kanzi.io.CompressedOutputStream.processBlock()",
        "kanzi.io.CompressedOutputStream.write(byte[ ], int, int)()",
        "kanzi.io.CompressedOutputStream.write(int)()",
        "kanzi.io.CompressedOutputStream.writeHeader()",
        "kanzi.transform.BWT.<init>()",
        "kanzi.transform.BWT.forward()",
        "kanzi.transform.BWT.getBWTChunks()",
        "kanzi.transform.BWT.getPrimaryIndex()",
        "kanzi.transform.BWT.maxBlockSize()",
        "kanzi.transform.BWT.setPrimaryIndex()",
        "kanzi.transform.BWTS.<init>()",
        "kanzi.transform.BWTS.forward()",
        "kanzi.transform.BWTS.maxBlockSize()",
        "kanzi.transform.BWTS.moveLyndonWordHead()",
        "kanzi.transform.DivSufSort$Stack.<init>()",
        "kanzi.transform.DivSufSort$Stack.pop()",
        "kanzi.transform.DivSufSort$Stack.push()",
        "kanzi.transform.DivSufSort$Stack.size()",
        "kanzi.transform.DivSufSort$TRBudget.<init>(int, int)()",
        "kanzi.transform.DivSufSort$TRBudget.check()",
        "kanzi.transform.DivSufSort.<init>()",
        "kanzi.transform.DivSufSort.computeSuffixArray()",
        "kanzi.transform.DivSufSort.constructSuffixArray()",
        "kanzi.transform.DivSufSort.reset()",
        "kanzi.transform.DivSufSort.sortTypeBstar()",
        "kanzi.transform.DivSufSort.ssBlockSwap()",
        "kanzi.transform.DivSufSort.ssCompare(int, int, int)()",
        "kanzi.transform.DivSufSort.ssCompare(int, int, int, int)()",
        "kanzi.transform.DivSufSort.ssFixDown()",
        "kanzi.transform.DivSufSort.ssHeapSort()",
        "kanzi.transform.DivSufSort.ssIlg()",
        "kanzi.transform.DivSufSort.ssInsertionSort()",
        "kanzi.transform.DivSufSort.ssMedian3()",
        "kanzi.transform.DivSufSort.ssMedian5()",
        "kanzi.transform.DivSufSort.ssMergeBackward()",
        "kanzi.transform.DivSufSort.ssMultiKeyIntroSort()",
        "kanzi.transform.DivSufSort.ssPartition()",
        "kanzi.transform.DivSufSort.ssPivot()",
        "kanzi.transform.DivSufSort.ssSort()",
        "kanzi.transform.DivSufSort.ssSwapMerge()",
        "kanzi.transform.DivSufSort.swapInSA()",
        "kanzi.transform.DivSufSort.trCopy()",
        "kanzi.transform.DivSufSort.trFixDown()",
        "kanzi.transform.DivSufSort.trHeapSort()",
        "kanzi.transform.DivSufSort.trIlg()",
        "kanzi.transform.DivSufSort.trInsertionSort()",
        "kanzi.transform.DivSufSort.trIntroSort()",
        "kanzi.transform.DivSufSort.trMedian3()",
        "kanzi.transform.DivSufSort.trMedian5()",
        "kanzi.transform.DivSufSort.trPartition()",
        "kanzi.transform.DivSufSort.trPivot()",
        "kanzi.transform.DivSufSort.trSort()",
        "kanzi.transform.SBRT.<init>()",
        "kanzi.transform.SBRT.forward()",
        "kanzi.util.hash.XXHash32.hash()",
        "kanzi.util.sort.HeapSort.test()",
        "kanzi.util.sort.InsertionSort.test()"
    ]
}